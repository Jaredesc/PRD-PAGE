// Variables principales
const video = document.getElementById('bgVideo');
const historyVideo = document.getElementById('historyVideo');
const backup = document.querySelector('.backup-background');
const loading = document.getElementById('loading');

// Variables para el men√∫ hamburger
const hamburger = document.getElementById('hamburger');
const navMenu = document.getElementById('navMenu');

// Flags para evitar m√∫ltiples inicializaciones
let videoInitialized = false;
let historyVideoInitialized = false;
let hamburgerInitialized = false;

// Inicializaci√≥n cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', function() {
    if (!videoInitialized) initializeVideo();
    if (!historyVideoInitialized) initializeHistoryVideo();
    initializeNavigation();
    if (!hamburgerInitialized) initializeHamburgerMenu();
    console.log('üé¨ PRD Digital Zacatecas cargado');
});

// Inicializar video de fondo principal
function initializeVideo() {
    if (!video || videoInitialized) return;
    videoInitialized = true;

    console.log('üé• Inicializando video principal...');

    // Evento de carga exitosa
    video.onloadeddata = function() {
        console.log('‚úÖ Video principal cargado');
        video.style.display = 'block';
        if (backup) backup.style.display = 'none';
        if (loading) loading.style.display = 'none';
        
        // Intentar reproducir
        video.play().catch(e => {
            console.log('‚ö†Ô∏è Autoplay fall√≥, se necesita interacci√≥n del usuario');
        });
    };

    // Evento de error
    video.onerror = function() {
        console.log('‚ùå Error cargando video principal');
        if (loading) {
            loading.innerHTML = '‚ö†Ô∏è Usando fondo animado';
            setTimeout(() => loading.style.display = 'none', 2000);
        }
    };

    // Asegurar loop
    video.onended = function() {
        video.currentTime = 0;
        video.play().catch(e => console.log('Error en loop:', e));
    };
}

// Inicializar video de historia
function initializeHistoryVideo() {
    if (!historyVideo || historyVideoInitialized) return;
    historyVideoInitialized = true;

    console.log('üå§Ô∏è Inicializando video de historia...');

    // Configurar propiedades anti-controles
    historyVideo.controls = false;
    historyVideo.disablePictureInPicture = true;
    historyVideo.setAttribute('controlslist', 'nodownload nofullscreen noremoteplayback');

    // Evento de carga exitosa
    historyVideo.onloadeddata = function() {
        console.log('‚úÖ Video de historia cargado');
        historyVideo.play().catch(e => {
            console.log('‚ö†Ô∏è Autoplay historia fall√≥');
        });
    };

    // Evento de error
    historyVideo.onerror = function() {
        console.log('‚ùå Error cargando video de historia');
    };

    // Asegurar loop
    historyVideo.onended = function() {
        historyVideo.currentTime = 0;
        historyVideo.play().catch(e => console.log('Error en loop historia:', e));
    };

    // Prevenir men√∫ contextual
    historyVideo.oncontextmenu = function(e) {
        e.preventDefault();
        return false;
    };
}

// Inicializar navegaci√≥n
function initializeNavigation() {
    // Smooth scroll para enlaces internos
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.onclick = function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
                // Cerrar men√∫ m√≥vil si est√° abierto
                if (navMenu && navMenu.classList.contains('active')) {
                    toggleHamburgerMenu();
                }
            }
        };
    });

    // Efecto de cambio de fondo del header al hacer scroll
    let ticking = false;
    window.onscroll = function() {
        if (!ticking) {
            requestAnimationFrame(function() {
                const header = document.querySelector('.header');
                if (header) {
                    if (window.scrollY > 50) {
                        header.style.background = 'rgba(0, 0, 0, 0.98)';
                    } else {
                        header.style.background = 'rgba(0, 0, 0, 0.85)';
                    }
                }
                ticking = false;
            });
            ticking = true;
        }
    };
}

// Inicializar men√∫ hamburger
function initializeHamburgerMenu() {
    if (!hamburger || !navMenu || hamburgerInitialized) return;
    hamburgerInitialized = true;

    console.log('üçî Inicializando men√∫ hamburger...');
    
    // Clic en hamburger
    hamburger.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        toggleHamburgerMenu();
    };
    
    // Cerrar men√∫ al hacer clic en enlaces
    navMenu.querySelectorAll('a').forEach(link => {
        link.onclick = function() {
            if (navMenu.classList.contains('active')) {
                toggleHamburgerMenu();
            }
        };
    });
    
    // Cerrar men√∫ al hacer clic fuera
    document.onclick = function(e) {
        if (!hamburger.contains(e.target) && !navMenu.contains(e.target)) {
            if (navMenu.classList.contains('active')) {
                toggleHamburgerMenu();
            }
        }
    };
    
    // Cerrar men√∫ al redimensionar ventana
    window.onresize = function() {
        if (window.innerWidth > 768 && navMenu.classList.contains('active')) {
            toggleHamburgerMenu();
        }
    };
    
    console.log('‚úÖ Men√∫ hamburger inicializado');
}

// Toggle del men√∫ hamburger
function toggleHamburgerMenu() {
    if (!hamburger || !navMenu) return;
    
    hamburger.classList.toggle('active');
    navMenu.classList.toggle('active');
    
    // Controlar scroll del body
    if (navMenu.classList.contains('active')) {
        document.body.style.overflow = 'hidden';
        console.log('üì± Men√∫ abierto');
    } else {
        document.body.style.overflow = 'auto';
        console.log('üì± Men√∫ cerrado');
    }
}

// Forzar reproducci√≥n con interacci√≥n del usuario (UNA SOLA VEZ)
let userInteracted = false;
function forcePlayVideos() {
    if (userInteracted) return;
    userInteracted = true;

    console.log('üëÜ Interacci√≥n del usuario detectada');
    
    // Video principal
    if (video && video.paused) {
        video.play().then(() => {
            console.log('‚úÖ Video principal iniciado por usuario');
        }).catch(e => {
            console.log('‚ùå Error reproduciendo video principal:', e);
        });
    }
    
    // Video de historia
    if (historyVideo && historyVideo.paused) {
        historyVideo.play().then(() => {
            console.log('‚úÖ Video historia iniciado por usuario');
        }).catch(e => {
            console.log('‚ùå Error reproduciendo video historia:', e);
        });
    }
}

// Event listeners para interacci√≥n del usuario (UNA SOLA VEZ)
document.addEventListener('click', forcePlayVideos, { once: true });
document.addEventListener('touchstart', forcePlayVideos, { once: true });

// Funciones para cuando agregues m√°s contenido
function showSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({ behavior: 'smooth' });
    }
}

// Funci√≥n para debug
function checkVideoStatus() {
    if (video) {
        console.log('üìπ Video principal:', {
            pausado: video.paused,
            duracion: video.duration,
            tiempo: video.currentTime
        });
    }
    
    if (historyVideo) {
        console.log('üå§Ô∏è Video historia:', {
            pausado: historyVideo.paused,
            duracion: historyVideo.duration,
            tiempo: historyVideo.currentTime
        });
    }
}

// Exponer funciones √∫tiles globalmente
window.PRD = {
    showSection,
    checkVideoStatus,
    forcePlayVideos,
    toggleHamburgerMenu
};